
global DIALOG_island_manager

filein( getFilenamePath(getSourceFileName()) + "/islandsRcMenu.ms" )	--"./rcMenu.ms"


/** Create island manager dialog
  *
  * @param #ALL|#SAVED
 */
function createIslandManagerDialog islands_to_show: =
(
	--clearListener(); print("Cleared in:\n"+getSourceFileName())
	format "\n"; print ".createIslandManagerDialog()"
	--format "ISLANDS_SYSTEM.islands_data: %\n" ISLANDS_SYSTEM.islands_data

	/** Get item titile
	 */
	function getItemTitile island_index =
	(
		/*

		   MAX SIZE AND DISPLAY UNITS - HOTFIX CODE

		   CREATE FUNCTION IslandsSystem_v.getMinMaxSize()

		*/
		display_units = case units.SystemType of -- convert to milimeters
		(
			#millimeters:	1
			#centimeters:	10
			#meters:	1000
			#kilometers:	1000000
			default:	1 -- non metric units
		)

		--_size_max = DIALOG_island_manager.SPIN_island_size_max.value / display_units
		_size_max = 10 / display_units
		--format "_size_max: %\n" _size_max
		/** Get heigh island
		 */
		function getHeighIslandX island_data        = if island_data[#TOP] != undefined and island_data[#TOP] - island_data[#BOTTOM] > 10  then "↕" else ""
		function getIslandSizeCharacter island_data _size_max = if island_data[#SIZE] != undefined and (island_data[#SIZE].x > _size_max or island_data[#SIZE].y > _size_max )  then "↔" else ""
		--format "\n"; print ".getItemTitile()"
		island_data = ISLANDS_SYSTEM.islands_data[island_index]

		whitespace = "                          "

		size_marks = getHeighIslandX(island_data) + getIslandSizeCharacter(island_data)(_size_max)

		if size_marks.count > 0 then
			size_marks = " " + size_marks

		--ISLANDS_SYSTEM.islands_data[island_index][#BOTTOM] as string +  "                          #" + island_index as string
		ISLANDS_SYSTEM.islands_data[island_index][#BOTTOM] as string + size_marks + whitespace+ "#" + island_index as string
	)


	/*------------------------------------------------------------------------------
		GET ITEMS
	--------------------------------------------------------------------------------*/
	--selected_islands = ISLANDS_SYSTEM.getSelectedIslandsFromListBox()

	if islands_to_show == unsupplied and ( visible_islands_saved = getUserPropVal ISLANDS_SYSTEM.obj "VISIBLE_ISLANDS" ) != undefined then
		islands_to_show = visible_islands_saved

	else if islands_to_show == unsupplied or islands_to_show.numberSet == 0 then
		islands_to_show = #{1..ISLANDS_SYSTEM.islands_data.count}


	items = for i = ISLANDS_SYSTEM.islands_data.count to 1 by -1 where islands_to_show[i] collect  getItemTitile (i)


	/*------------------------------------------------------------------------------
		DIALOG
	--------------------------------------------------------------------------------*/
    Dialog 	    = Dialog_v "" id:#DIALOG_island_manager ini:(getSourceFileName()) --min_size:[48, -1] max_size:[48, -1]

	_Controls   = Dialog.Controls() --group:"Main Controls"

	item_height = 13

	viewport_height = Dialog.getViewportHeight()

	items_count = items.count

	pos_y_start = 24

	height_other_controls = 84

    max_item_length = amax(for i = ISLANDS_SYSTEM.islands_data.count to 1 by -1 collect (ISLANDS_SYSTEM.islands_data[i][#BOTTOM] as string ).count)
	--format "MAX_ITEM_LENGTH: %\n" max_item_length
	--width_listbox = 32
	--character_width = 4
	width_listbox = (max_item_length * 10 ) + 16

	slider_width = 32


	space_for_listbox = viewport_height - height_other_controls


	listbox_height = (space_for_listbox / item_height) as integer -- number of max visible items in listbox


	/* FIT LISTBOX HEIGHT TO ITEMS COUNT AND ALIGN TO BOTTOM */
	if items_count < listbox_height then
	(
		listbox_height_in_px = items.count * item_height

		pos_y_start += viewport_height - listbox_height_in_px - height_other_controls - 4 -- 2 px to set position pixel perfect

		listbox_height = items.count
	)
	else
	/* ADD WIDTH FOR SCROLLBAR IF ITMES IS MORE THEN FIT TO LSITBOX */
		width_listbox += 20

	/*------------------------------------------------------------------------------
		CONTROLS
	--------------------------------------------------------------------------------*/
    btn_exit = _Controls.control #BUTTON "Exit" width:48 height:24 offset:[ 12, -4 ] tooltip:"Exit and remove slicer from all objects"

	/*------ MULTILISTBOX ------*/
	_multilistbox = _Controls.control #MULTILISTBOX "" \
	id:#ML_island_listbox	\
	width:width_listbox	\
	height:listbox_height	\
	items:items			\
	across:2			\
	ini:false			\
                   pos:[ 4, pos_y_start ]

	/*------ SLIDER ------*/
    _slider = _Controls.control #SLIDER "" id:#SLIDER_island_select	\
                    range:[0, items_count - 1 ,0]	\
                    params:#(#orient, #vertical, #type, #integer)	\
                    ticks:(items_count - 2)	\
                    width:slider_width	\
                    height:((listbox_height + 1) * item_height)	\
                    across:2	\
                    ini:false	\
                    pos:[ width_listbox + 4, pos_y_start - 4 ]

	/*------ CECKBUTTON ------*/
	btn_isloate = _Controls.control #CHECKBUTTON "ISOLATE" id:#CBTN_isolate height:32


	/*------ RADIOBUTTONS ------*/
	_radio = _Controls.control #RADIOBUTTONS "" id:#RB_slider_mode items:#("   ↓   ","   ↑   ") params:#( #UNSELECT, true ) across:1 offset:[ 4, 2 ] --align:#center  --width:96

	/*------ SPINNER ------*/
	_size_min = _Controls.control #SPINNER "" id:#SPIN_island_size_min across:2 type:#integer range:[0,100,2] width:48 offset:[ -10, 0]
	_size_max = _Controls.control #SPINNER "" id:#SPIN_island_size_max across:2 type:#integer range:[0,100,5] width:48


	/*------------------------------------------------------------------------------
		EVENTS
	--------------------------------------------------------------------------------*/
	btn_isloate.Event #CHANGED    "::IslandsCallbacks_v.isolateSlectedIslands()" tooltip:"Show only verts of selected islands"
	btn_isloate.Event #RIGHTCLICK "::IslandsCallbacks_v.unhideVerts()" tooltip:"Unhide Verts"

	_radio.Event #CHANGED "::IslandsCallbacks_v.updateIslandSelectionByRadiobuttonsState()"
	_radio.Event #RIGHTCLICK "::IslandsCallbacks_v.updateIslandSelectionByRadiobuttonsState()"


	_multilistbox.Event #SELECTIONEND "::IslandsCallbacks_v.onListboxSelectionEnd()"
    _multilistbox.Event #RIGHTCLICK "openNewIslandsMenu()"

	_slider.Event #CHANGED     "::IslandsCallbacks_v.onSliderChanged(val)"
	_slider.Event #SLIDE       "::IslandsCallbacks_v.onListboxSelectionEnd()"
	_slider.Event #RIGHTCLICK  "::IslandsCallbacks_v.toggleSelectIslandMode()"

	_size_min.Event #CHANGED "format \"EventFired: %\n\" EventFired"
	_size_max.Event #CHANGED "format \"EventFired: %\n\" EventFired"

	--Dialog.min_size = [32, -1]
	--Dialog.create width:(width_listbox + slider_width) height:#VIEWPORT --style:#()  --lockWidth:false --bgcolor:( color 60 130 140 )
	Dialog.create width:(96) height:#VIEWPORT --style:#()  --lockWidth:false --bgcolor:( color 60 130 140 )
	--Dialog.create height:#VIEWPORT --bgcolor:( color 60 130 140 )

	/* KEEP SLICER AND ISLAND DILOGS IN SAME ORDER HWEN DILAG IS DOCKED #RIGHT */
	if DIALOG_elevation_slider != undefined and GetDialogPos DIALOG_elevation_slider != [0,0] and cui.getDockState DIALOG_elevation_slider == #CUI_DOCK_RIGHT then
	(
		cui.FloatDialogBar DIALOG_elevation_slider

		Dialog.dock #RIGHT

		cui.DockDialogBar DIALOG_elevation_slider #CUI_DOCK_RIGHT
	)
	else
		Dialog.dock #RIGHT


)
